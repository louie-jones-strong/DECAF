services:

  experience-store:
    build:
      context: ./src/ExperienceStore
      dockerfile: Dockerfile
    image: experience-store

    volumes:
      # add output dictionary for the learned data
      - ML_Data:/app/Data

      # dictionaries for dev
      - ./src:/app/Source

    working_dir: /app
    networks:
      - projectNetwork
    expose:
      - 5001

    entrypoint: python Source/ExperienceStore.py

  model-store:
    image: redis

    volumes:
      - ML_Data:/data

    networks:
      - projectNetwork
    expose:
      - 5002

    entrypoint: redis-server --port 5002 # --save 60 1

  web-server:
    build:
      context: ./src/WebServer
      dockerfile: Dockerfile
    image: web-server

    volumes:
      # dictionaries for dev
      - ./src:/app/Source

    working_dir: /app
    networks:
      - projectNetwork
    ports:
      - "5000:5000"

    entrypoint: python Source/WebServer.py

  worker:
    build:
      context: ./src/Worker
      dockerfile: Dockerfile
    image: worker

    volumes:
      # add output dictionary for the learned data
      - ML_Data:/app/Data

      # dictionaries for dev
      - ./src:/app/Source
      - ./Config:/app/Config


    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

    working_dir: /app
    networks:
      - projectNetwork

    entrypoint: python Source/Worker.py --env /app/Config/Envs/FrozenLake.json

  learner:
    build:
      context: ./src/Learner
      dockerfile: Dockerfile
    image: learner

    volumes:
      # add output dictionary for the learned data
      - ML_Data:/app/Data

      # dictionaries for dev
      - ./src:/app/Source
      - ./Config:/app/Config
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

    working_dir: /app
    networks:
      - projectNetwork


    entrypoint: python Source/learner.py --model policy --env /app/Config/Envs/FrozenLake.json


volumes:
  ML_Data:
  ML_Config:
networks:
  projectNetwork: