name: Build Docs

on:
  push:
    branches:
      # Trigger only on pushes to the main branch
      - main
  pull_request:
    branches:
      # Trigger on pull requests targeting the main branch
      - main


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    # Standard drop-in approach that should work for most people.
    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "docs/"


        # Example of using a custom build-command.
    # - uses: ammaraskar/sphinx-action@master
    #   with:
    #     build-command: "sphinx-build -b html . _build"
    #     docs-folder: "docs2/"


    # Create an artifact of the html output.
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: docs/_build/html/



  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    # Ensure the "build" job is completed before starting deployment
    needs: build

    # Run the deployment step only on the main branch
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2